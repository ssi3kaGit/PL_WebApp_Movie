/* borrow one of the currently available resets: meyerweb. */
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}


/*CSS Rule 2: Create a class that will serve as a container for your elements, set margin, padding, and width.*/
.containerClass
{
    padding: 15px; /* Style 4. Add padding to the sections. You may want to try adjusting the padding to find the numbers that work for your ideal design. */
    margin-bottom: 10px;  /* Style 3. Add vertical space between elements; for example, set bottom margin to 22 pixels. */
    margin: 10px;
    text-align: center;

    /*width: auto;*/
}

/* CSS Rule 3: Set the copyright footer to float left. Create a copyright class and set the float property to be left. Add the copyright class to the <small> tag. */
.copyrightClass
{
    float: left;
}

/* CSS Rule 4: Create a primary-footer class to further specify the look-and-feel of the footer and set top and bottom padding. Then, add the class to the <footer>. */
.primaryFooter
{
    padding-top: 25px;
    padding-bottom: 25px;
    outline-color: black;
}

/* CSS Rule 5 */
* {
    box-sizing: border-box;
} 

/* Responsive 2. Define column width. Typically, we want a responsive grid-view with 12 columns. Therefore, each columnâ€™s width is 100% / 12 = 8.33%. */

/*
.container {
  display: grid;
  grid-template-columns: 18% 18% 18% 18% 18%;
  grid-template-rows: 90%;
  justify-items: center;
}
*/

.row{width: 100%; margin: 1em 0;}

/*
.group:after {
    content: "";
    display: table;
    clear: both;
  }     
*/

[class*="col-"] {
    float: left;
    margin: 0 0 0 2%;
}

/* CSS Rule 6: media stuff*/

/* Repsonsive 3. */
@media only screen and (max-width: 768px) {
    /* For mobile phones and tablets: */
    [class*="col-"] {
        width: 100%;
    }
} 

@media only screen and (min-width: 768px) {
    .col-x {width: 16.4%;}

    .col-1 {width: 8.33%;}

    .col-2 {width: 16.66%;}

    .col-3 {width: 25%;}

    .col-4 {width: 33.33%; }

    .col-5 {width: 41.66%;}

    .col-6 {width: 50%;}

    .col-7 {width: 58.33%;}

    .col-8 {width: 66.66%;}

    .col-9 {width: 75%;}

    .col-10 {width: 83.33%;}

    .col-11 {width: 91.66%;}

    .col-12 {width: 100%;}

    [class*="col-"] {
        /*width: 100%;*/
        float: left;
        padding: 20px;
    }
} 


/* CSS Rule 7: */
html { 
    background: url(https://coolbackgrounds.io/images/backgrounds/index/ranger-4df6c1b6.png) no-repeat center center fixed; 
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
  }

  

